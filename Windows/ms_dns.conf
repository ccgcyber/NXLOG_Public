########################################
# INPUT Microsft DNS Logs              #
########################################

<Extension _msdns>
    Module	xm_csv
    Fields	$date,$time,$threadid,$info,$referenceid,$protocol,$direction,$srcipv4,$xid,$query,$opcode,$operationid,$flagtype,$result,$querytype,$domain
    Delimiter	\t
    EscapeControl FALSE
    UndefValue  " "
</Extension>

#Replaces DNS notation to standard domain format
<Input DNS>
    Module	im_file
    #Path to DNS Logs, make sure to use double backslashes if using variables
    File	"C:\DNS\dns.log"
    SavePos	TRUE
    InputType	LineBased
    Exec	if $raw_event =~ /^#/ drop();\
    		_msdns->parse_csv();\
			$eventtime = parsedate($date + " " + $time);\
			if $domain =~ s/(\([1-9]*\))/./g; if $domain =~ s/\(0\)/ /g;\
			$Hostname = host_ip();\
			$FQDN = hostname_fqdn();\
			$tag = "dns";\
			$SourceName = "microsoft_dns";\
			delete("date");\
			delete("time");\
			to_json();
    <Schedule>
  #Hourly MS_DNS rate monitoring
  Every	3600 sec
  Exec	if defined get_stat("msdns_hourly") \
  {\
    log_warning(get_stat("msdns_hourly") + " messages received from input MS_DNS in past 1 hour"); \
  }
	</Schedule>
	<Schedule>
  #30 Minute MS_DNS rate monitoring for dropped source
  Every	1800 sec
  Exec	if defined get_stat("msdns_rate") and get_stat("msdns_rate") <= 1 \
  {\
  	log_warning("No messages received from input MS_DNS for 30 minutes!"); \
  }
	</Schedule>
</Input>